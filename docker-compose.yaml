version: '3.8'

services:
  # Сервис для PostgreSQL
  db:
    image: postgres:14
    container_name: postgres_db
    environment:
      POSTGRES_USER: *******
      POSTGRES_PASSWORD: ********
      POSTGRES_DB: maintenance
    ports:
      - "5442:5432"  # PostgreSQL будет доступен на порту 5442
    volumes:
      - postgres_data:/var/lib/postgresql/data
 #     - ./dump.sql:/docker-entrypoint-initdb.d/dump.sql  # Монтируем дамп
    networks:
      - maintenance_network

  # Сервис для Flyway (миграции)
  flyway:
    image: flyway/flyway:latest
    container_name: flyway
    environment:
      FLYWAY_URL: jdbc:postgresql://db:5432/maintenance  # Подключаемся к базе данных PostgreSQL
      FLYWAY_USER: ********
      FLYWAY_PASSWORD: *******
    command: -locations=filesystem:/flyway/sql migrate  # Запуск миграций
    depends_on:
      - db
    volumes:
      - ./src/main/resources/db/migration:/flyway/sql  # Монтируем папку с миграциями
    networks:
      - maintenance_network

  # Сервис для Java-приложения
  java-app:
    build:
      context: ./  # Используем текущую директорию для контекста сборки
      dockerfile: Dockerfile
    container_name: maintenance_app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/maintenance  # Конфигурация для подключения к базе
      SPRING_DATASOURCE_USERNAME: **********
      SPRING_DATASOURCE_PASSWORD: **********
    ports:
      - "8188:8188"  # Приложение будет доступно на порту 8188
    depends_on:
      - db
    networks:
      - maintenance_network

  # Сервис для pgAdmin (если нужно для управления базой)
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ******
      PGADMIN_DEFAULT_PASSWORD: *****
    ports:
      - "5050:80"  # pgAdmin доступен на порту 5050
    networks:
      - maintenance_network

volumes:
  postgres_data:  # Храним данные PostgreSQL

networks:
  maintenance_network:
    driver: bridge
